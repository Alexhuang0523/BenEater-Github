                                              Programming 
                                  *Arduino Reference* Function Guidelines 
                               shiftOut == Function from *Arduino Reference*
                               
Using 3 Pins(Arduino) to control 21 Pins(EEPROM) 
#define SHIFT_DATA 2
#define SHIFT_CLK 3
#define SHIFT_LATCH 4
#define EEPROM_D0 5
#define EEPROM_D7 12
#define WRITE_EN 13

void setAddress(int address, bool outputEnable) {                                first bit set       
 // Double shiftOut due to 2 Switch Register                                         |
 // Switch 8 bits to right, remain 3 bits  e.g. 1234 ===> 100 1101 0010              |
 shiftOut(SHIFT_DATA, SHIFT_CLK, MSBFIRST, (address >> 8) | (outputEnable ? 0x00 : 0x80));
 shiftOut(SHIFT_DATA, SHIFT_CLK, MSBFIRST, address); 
 
 digitalWrite(SHIFT_LATCH, LOW);    // Activating Store Register by creating a Clock Pulse
 digitalWrite(SHIFT_LATCH, HIGH);
 digitalWrite(SHIFT_LATCH, LOW);
}


byte readEEPROM(int address) {
  for (int pin = EEPROM_D0; pin <= EEPROM_D7; pin +=1 ) {
    pinMode(pin, INPUT);
  }

  setAddress(address, /*outputEnable*/ true);
  byte data = 0;
  for (int pin = EEPROM_D7; pin >= EEPROM_D0 /*read from 7 to 0*/; pin -= 1) {
    data = (data << 1 /*Switch to left*/) + digitalRead(pin);
  }
  return data;
}


void writeEEPROM(int address, byte data) {
  for (int pin = EEPROM_D0; pin <= EEPROM_D7; pin +=1 ) {
    pinMode(pin, OUTPUT);
  }
  
  setAddress(address, /*outputEnable*/ false);
  for (int pin = EEPROM_D0; pin <= EEPROM_D7; pin+= 1) {
    digitalWrite(pin, data & 1);
    data = data >> 1;
  }
  digitalWrite(WRITE_EN, LOW);
  delayMicrosecond(1);
  digitalWrite(WRITE_EN, HIGH);
  delay(5);
}


void printContents() {
  for (int base = 0; base <= 255; base += 16) {     ===================================================> 000:
    byte data[16];                                           //Physical Address + Offset address         010:
    for (int offset /*offset address*/ = 0; offset <= 15; offset += 1) {                                 020:
      data[offset] = readEEPROM(base + offset);                                                          030:
    }  
    
    char buf[80];
    sprintf(buf, "%03x: %02x %02x %02x %02x %02x %02x %02x %02x  %02x %02x %02x %02x %02x %02x %02x %02x",
      base, data[0], data[1], data[2], data[3], data[4], data[5], data[6], data[7],
      data[8], data[9], data[10], data[11], data[12], data[13], data[14], data[15]);
      
    Serial.println(buf);  
    
    }
}

void setup() {
  // Setup code, run once 
  printMode(SHIFT_DATA, OUTPUT);
  printMode(SHIFT_CLK, OUTPUT);                                  
  printMode(SHIFT_LATCH, OUTPUT);
  digitalWrite(WRITE_EN, HIGH);
  pinMode(WRITE_EN, OUTPUT);
  Serial.begin(57600);                                         // Serial(Monitor Screen) Port 
  
  writeEEPROM(0, 42);
  printContents();
  
  *Testing 1*         
  setAddress(1234, false /*Active Low*/);                     // Switch Register output to LED 
  *Testing 2*
  Serial.println(readEEPROM(0) /*read data at address 0*/);   // Read data from Serial port not from Pin
  
 }






