              JAVA ========> AASEMBLY 
                Reverse Engineering 

JAVA Source Code 
                ByteCode 
                   |    Native code 
                   |          |    Machine Code         
                   |          |
               Run in JVM    CPU

HEAP  
   Memory area of JVM
JIT & AOT 
 | Place where transfer High-level language to Low-level language
 |
 Inlining 
    Same Target Type (Run target code directly)
    Not Same Target Type (Run target method as a call)
 Optimization 
    Doing least amount of work to accomplish goal                   
        

                Compiler Workings 
                        
Language-dependent Stages ----> Machine-dependent Stages 
      (Syntax rules)             (Register Allocation)
                       
                  Lexical Analysis 
                      - done by lexer 
                      - identifies lexemes 
                      - generates stream of tokens (Regular representation)
                      - creates symbol & string table
                        |
                     Parsing 
             (Abstract Syntax Tree)
                        |
                 Semantic Analysis 
                        |
              Instruction Selection 
                        |
             Internal Representation 
                    (Assembly) 
                        |
               Register Allocation 
                        |
                 Code Generation 
                        |
                Assembly + Linking 
                
