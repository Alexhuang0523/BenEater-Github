1.1
Microprocessor

Today we learn how to capture "Data" from a Microprocessor W65C025

A Microprocessor consists of many "Data Pins"
There is Pinout diagram for each processor, it describes the details of all the pins
VDD : 5 Votls/Positive
VSS : Ground/Negative
A0-A15 : Addressline
D0-D7 : Dataline, Dataline can be "Input" or "Output"
Reset : A button to reset the Microprocessor
Clock Input 
RWB : This describes whether a Micrproocessor is using the "Data Pins" for "Input" or "Output"
      Low, Data pins are "Output" Writting
      High, Data pins are "Input" Reading 

At first, we tie all the "Input data pins" to Ground/Negative, later we will tie all the 
"Output data pins" to Arduino for "capturing Data"

Microprocessor W65C025 is fully static design thus it allows us to stop and single-step 
the clock 

We can read the "Output data pin" in the form of Binary "01010" by using LED light 
light on = 1
light off = 0
Tieing "LED light" to "A0-A15" Dataline and to "Ground"/Negative throgh "Resistors" 
LED Light + A0-A15 + Resistors ===> Ground

Codes in Arduino :
//16 Addressline pin numbers from "Arduino digital I/O pins"
const char ADDR[] = {22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48, 50, 52} 

//8 Dataline pin numbers from "Arduino digital I/O pins"
const char DATA[] = {39, 41, 43, 45, 47, 49, 51, 53} 

//We "compute and print" the "Data" in the form of "Hexidecimal" instaed of "Binary"
code : %04x   %c   %02x 
No negative figues 
code : unsigned int address = 0;
Computing means an act or process of calculating an answer by using machine 
code : address = (address << 1) + bit;  
Bit comes from code : int bit = digitalRead(ADDR[n])?1:0
% means Binary 
x means Hexidecimal
04 means 4 Digits 
%04x means 4 Hex-number digits (Addressline)
%02x means 2 Hex-number digits (Dataline)






















//serial.print("    ") means "Space"























