1.1
Microprocessor, Clock Circuit, & Arduino Mega 

Today we learn how to capture "Data" from a Microprocessor W65C025

A Microprocessor consists of many "Data Pins"
There is Pinout diagram for each processor, it describes the details of all the pins
VDD : 5 Votls/Positive
VSS : Ground/Negative
A0-A15 : Addressline
D0-D7 : Dataline, Dataline can be "Input" or "Output"
Reset : A button to reset the Microprocessor
Clock Circuit Input 
RWB : This describes whether a Micrproocessor is using the "Data Pins" for "Input" or "Output"
      Low, Data pins are "Output" Writting
      High, Data pins are "Input" Reading 

At first, we tie all the "Input data pins" to Ground/Negative, later we will tie all the 
"Output data pins" to Arduino for "capturing Data"

Microprocessor W65C025 is fully static design thus it allows us to stop and single-step 
the Clock Circuit 

We can read the "Output data pin" in the form of Binary "01010" by using LED light 
light on = 1
light off = 0
Tieing "LED light" to "A0-A15" Dataline and to "Ground"/Negative throgh "Resistors" 
LED Light + A0-A15 + Resistors ===> Ground

Programming in Arduino Mega :
//16 Addressline pin numbers from "Arduino Mega digital I/O pins"
const char ADDR[] = {22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48, 50, 52} 

//8 Dataline pin numbers from "Arduino Mega digital I/O pins"
const char DATA[] = {39, 41, 43, 45, 47, 49, 51, 53} 

//We "compute and print" the "Data" in the form of "Hexidecimal" instaed of "Binary"
Program : %04x   %c   %02x 
No negative figues 
Program : unsigned int address = 0;
Computing means an act or process of calculating an answer by using machine 
Program : address = (address << 1) + bit;  
Bit comes from code : int bit = digitalRead(ADDR[n])?1:0
% means Binary 
x means Hexidecimal
04 means 4 Digits 
%04x means 4 Hex-number digits (Addressline)
%02x means 2 Hex-number digits (Dataline)

Program : serial.print("    ") means "Space"

At this moment, Microprocessor is reading "Data" but which is meaningless 
reading "Garbage" 

Setting "Default value", connecting those data pins to predictable signal 
Tieing each data bit to Ground/Negative or to 5 Volt/Positive through a 
1K resistors 
Now the "Default value" of Dataline becomes 11101010 (Same Addressline)
1: Tie to 5 Volt
0 : Tie to Ground 

"OP Code Matrix Table" describes Instructions 
ea means no operations (No Instruction)
"Addressing Mode Table" describes 2 clock cycles 

Reset(RESB) describes the starting location where Mircoprocessor reads 
FFFC FFFD 
1111111111111100 11101010 fffc r ea 
1111111111111101 11101010 fffd r ea 

Conclusion of Part 1 :
Microprocessor is now initializing, it is trying to execute instructions,
but now we are not feeding it instructions, it is hardwiring the no op 
instruction


























